/*
  This class has been generated by the Code Generator
*/

package com.vms_metadata;

import java.io.ByteArrayOutputStream;
import java.io.FileOutputStream;
import java.io.IOException;

import org.apache.poi.hssf.usermodel.HSSFCellStyle;
import org.apache.poi.hssf.usermodel.HSSFFont;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.hssf.util.HSSFColor;

import com.cordys.cpc.bsf.busobject.BusObjectConfig;
import com.cordys.cpc.bsf.busobject.BusObjectIterator;
import com.cordys.cpc.bsf.busobject.DMLStatement;
import com.cordys.cpc.bsf.busobject.QueryObject;
import com.eibus.util.system.EIBProperties;

public class VMS_ORIGINAL_KEY_LOC_STORE extends VMS_ORIGINAL_KEY_LOC_STOREBase
{
    
   public static String GenerateExcelOriginalKeyDetails(String Veh_Sl_No, String Veh_Body_No) throws IOException
   
   {
  String filePath = "MAHINDRA_UPLOADS//VMS//CONSOLIDATED_REPORTS//VMS_Report_OriginalKeyDetails.xls";
     String fileName = EIBProperties.getInstallDir().concat("//webroot//shared//" + filePath);
   HSSFWorkbook wb = new HSSFWorkbook();
     HSSFSheet sheet = wb.createSheet("Report");
     HSSFFont boldFont = wb.createFont();
     //boldFont.setBoldweight(700);
     HSSFCellStyle boldStyle = wb.createCellStyle();
     boldStyle.setFont(boldFont);
     HSSFCellStyle grayColor = wb.createCellStyle();
     grayColor.setFillBackgroundColor(new HSSFColor.GREY_40_PERCENT().getIndex());
     HSSFRow headerRow = sheet.createRow(0);
       
     headerRow.createCell((short) 0).setCellValue("Vehicle Body No");
     headerRow.createCell((short) 1).setCellValue("Vehicle Model Name");
     headerRow.createCell((short) 2).setCellValue("Vehicle Serial No");
     headerRow.createCell((short) 3).setCellValue("Vehicle Hook No");
     headerRow.createCell((short) 4).setCellValue("Vehicle KeyBoard Name");
     headerRow.createCell((short) 5).setCellValue("Token No");
     headerRow.createCell((short) 6).setCellValue("Name");
     
     headerRow.createCell((short) 7).setCellValue("Expected Return Date");
     headerRow.createCell((short)8).setCellValue("Actual Return Date");
     headerRow.createCell((short) 9).setCellValue("Key Availability");
     headerRow.createCell((short)10).setCellValue("Parking Location");
     
     headerRow.createCell((short)11).setCellValue("Parking Slot Number");
     headerRow.createCell((short)12).setCellValue("Vehicle Condition");
     headerRow.createCell((short)13).setCellValue("Remarks");
     ByteArrayOutputStream fos = new ByteArrayOutputStream();
     BusObjectIterator<VMS_ORIGINAL_KEY_LOC_STORE> data =  getOriginalReport(Veh_Sl_No,Veh_Body_No);
     int rowValue=1;
     while(data.hasMoreElements())
     {
    VMS_ORIGINAL_KEY_LOC_STORE vmsobj = data.nextElement();
    HSSFRow row = sheet.createRow(rowValue);    
    row.createCell((short) 0).setCellValue(vmsobj.getStringProperty("VMS_VHCLE_BDY_NO"));
row.createCell((short) 1).setCellValue(vmsobj.getStringProperty("VMS_VHCLE_MDL_NAME"));
row.createCell((short) 2).setCellValue(vmsobj.getStringProperty("VMS_VHCLE_SLNO"));
row.createCell((short) 3).setCellValue(vmsobj.getStringProperty("VMS_HOOK_NO"));
row.createCell((short) 4).setCellValue(vmsobj.getStringProperty("VMS_KEYBOARD_VALUE"));
row.createCell((short) 5).setCellValue(vmsobj.getStringProperty("VMS_HANDED_OVERTO"));
row.createCell((short) 6).setCellValue(vmsobj.getStringProperty("VMS_HANDED_OVERTO_TKN"));
row.createCell((short) 7).setCellValue(vmsobj.getStringProperty("VMS_EXPECTED_RTRN_DATE"));
row.createCell((short) 8).setCellValue(vmsobj.getStringProperty("VMS_ACTUAL_RTRN_DATE"));
row.createCell((short) 9).setCellValue(vmsobj.getStringProperty("VMS_KEY_AVAILABILITY"));
row.createCell((short) 10).setCellValue(vmsobj.getStringProperty("VMS_OKLS_PARKING_LOC"));
row.createCell((short) 11).setCellValue(vmsobj.getStringProperty("VMS_PARKING_SLOT_NO"));
row.createCell((short) 12).setCellValue(vmsobj.getStringProperty("VMS_VHCLE_CNDTION_ON"));
row.createCell((short) 13).setCellValue(vmsobj.getStringProperty("VMS_REMARKS"));
rowValue++;
    }
   // wb.write(fos);
// fos.close();
FileOutputStream out = new FileOutputStream(fileName);
    wb.write(out);
    out.close();
return filePath;
   }
 // end of excel method  
    


public static String deleteVMS_OriginalKeyObj(String VMS_ORI_REFNO){
String result="NotDeleted";
try {
String dmlStatement="DELETE FROM VMS_ORIGINAL_KEY_LOC_STORE WHERE VMS_ORI_REFNO='"+VMS_ORI_REFNO+"'";
    DMLStatement stmt=new DMLStatement(dmlStatement);
    stmt.execute();
    result="Deleted";

} catch (Exception e) {
// TODO: handle exception
result="NotDeleted";
e.printStackTrace();
}
return result;

}

}